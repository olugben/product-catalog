
name: CI Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: ${{ vars.TEST_DB_NAME || 'test_db' }}
          POSTGRES_USER: ${{ secrets.TEST_DB_USER || 'test_user' }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD || 'test_password' }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ vars.TEST_DB_NAME || 'test_db' }}
      DB_USER: ${{ secrets.TEST_DB_USER || 'test_user' }}
      DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD || 'test_password' }}
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Wait for PostgreSQL
        timeout-minutes: 2
        run: |
          for i in {1..10}; do
            if nc -z localhost 5432; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            sleep 3
          done
          echo "PostgreSQL failed to start"
          exit 1
          
     
          
      - name: Run tests
        run: npm test
        env:
          CI: true
          TEST_RETRIES: 2
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()